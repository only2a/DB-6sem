-- 2 
-- 2.1
SELECT DISTINCT  s.STUDENT, s.FACULTY,
	AVG(sm.MARK) OVER(PARTITION BY s.STUDENT) AS STUDENT_AVG_MARK
FROM STUDENT s
JOIN STUDENT_MARK sm ON s.STUDENT = sm.STUDENT
JOIN FACULTY f ON s.FACULTY = f.FACULTY
WHERE DATE >= '2023-01-01' AND DATE <= '2023-04-30';

-- 2.2
SELECT DISTINCT s.STUDENT, s.FACULTY,
  AVG(sm.MARK) OVER(PARTITION BY s.STUDENT) AS STUDENT_AVG_MARK,
  AVG(sm.MARK) OVER(PARTITION BY s.FACULTY) AS FACULTY_AVG_MARK,
  ((AVG(sm.MARK) OVER(PARTITION BY s.STUDENT) - AVG(sm.MARK) OVER(PARTITION BY s.FACULTY))
  / AVG(sm.MARK) OVER(PARTITION BY s.FACULTY)) * 100 AS PERCENT_DIFFERENCE
FROM STUDENT s
JOIN STUDENT_MARK sm ON s.STUDENT = sm.STUDENT
JOIN FACULTY f ON s.FACULTY = f.FACULTY
WHERE DATE >= '2023-01-01' AND DATE <= '2023-04-30';

-- 2.3
SELECT 
    STUDENT, 
    AVG(MARK) AS AVG_MARK,
    (AVG(MARK) / MAX(AVG(MARK)) OVER() * 100) AS PERCENTAGE
FROM STUDENT_MARK
WHERE DATE >= '2023-01-01' AND DATE <= '2023-04-30'
GROUP BY STUDENT;

-- 3
declare @page int = 2;

with Rows AS
(
    SELECT *, ROW_NUMBER() OVER (ORDER BY STUDENT) AS RowNumber
    FROM STUDENT_MARK
)

select * FROM Rows
WHERE RowNumber BETWEEN 21 * (@page - 1) AND 20 * (@page);

-- 4
CREATE TABLE PERSONS (
    ID INT PRIMARY KEY,
    NAME VARCHAR(50)
);

INSERT INTO PERSONS VALUES (1, 'QQ');
INSERT INTO PERSONS VALUES (2, 'WW');
INSERT INTO PERSONS VALUES (3, 'QQ');
INSERT INTO PERSONS VALUES (4, 'EE');

WITH Rows AS 
(
  SELECT ROW_NUMBER() OVER (PARTITION BY NAME ORDER BY ID) AS RowNumber, *
  FROM PERSONS
)
DELETE FROM Rows WHERE RowNumber > 1;

SELECT * FROM PERSONS;

DELETE FROM PERSONS;

-- 5
SELECT	STUDENT, 
		AVG(CASE WHEN rn = 1 THEN MARK END) AS AVG_SUBJECT1, 
		AVG(CASE WHEN rn = 2 THEN MARK END) AS AVG_SUBJECT2,
		AVG(CASE WHEN rn = 3 THEN MARK END) AS AVG_SUBJECT3
FROM (
    SELECT STUDENT, SUBJECT, MARK, ROW_NUMBER() OVER (PARTITION BY STUDENT ORDER BY DATE DESC) AS rn
    FROM STUDENT_MARK
) AS sub
WHERE rn <= 3
GROUP BY STUDENT;

-- 6
SELECT SUBJECT, STUDENT, EXAM_COUNT
FROM (
    SELECT SUBJECT, STUDENT, COUNT(*) AS EXAM_COUNT, 
	RANK() OVER (PARTITION BY SUBJECT ORDER BY COUNT(*) DESC) AS RANK
    FROM STUDENT_MARK
    GROUP BY SUBJECT, STUDENT
) T
WHERE RANK = 1

